<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.UxinxiMapper" >
  <resultMap id="BaseResultMap" type="com.model.Uxinxi" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="uxinxiId" property="uxinxiId" jdbcType="INTEGER" />
    <result column="uxinxiName" property="uxinxiName" jdbcType="VARCHAR" />
    <result column="uxinxiMark" property="uxinxiMark" jdbcType="VARCHAR" />
    <result column="uxinxiMark1" property="uxinxiMark1" jdbcType="VARCHAR" />
    <result column="uxinxiMark2" property="uxinxiMark2" jdbcType="VARCHAR" />
    <result column="uxinxiImg" property="uxinxiImg" jdbcType="VARCHAR" />
    <result column="uxinxiImgName" property="uxinxiImgName" jdbcType="VARCHAR" />
    <result column="uxinxiDate" property="uxinxiDate" jdbcType="TIMESTAMP" />
    <result column="uxinxiZong" property="uxinxiZong" jdbcType="INTEGER" />
    <result column="uxinxiZong1" property="uxinxiZong1" jdbcType="INTEGER" />
    <result column="uxinxiZong2" property="uxinxiZong2" jdbcType="INTEGER" />
    <result column="uxinxiDouble" property="uxinxiDouble" jdbcType="DOUBLE" />
    <result column="uxinxiDouble1" property="uxinxiDouble1" jdbcType="DOUBLE" />
    <result column="uxinxiDouble2" property="uxinxiDouble2" jdbcType="DOUBLE" />
    <result column="uxinxiType" property="uxinxiType" jdbcType="INTEGER" />
    <result column="uxinxiType1" property="uxinxiType1" jdbcType="INTEGER" />
    <result column="uxinxiType2" property="uxinxiType2" jdbcType="INTEGER" />
    <result column="uxtypeId" property="uxtypeId" jdbcType="INTEGER" />
    <result column="uxtypeName" property="uxtypeName" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="bumenId" property="bumenId" jdbcType="INTEGER" />
    <result column="bumenName" property="bumenName" jdbcType="VARCHAR" />
    <result column="buyuanId" property="buyuanId" jdbcType="INTEGER" />
    <result column="buyuanName" property="buyuanName" jdbcType="VARCHAR" />
    <result column="buzhiId" property="buzhiId" jdbcType="INTEGER" />
    <result column="buzhiName" property="buzhiName" jdbcType="VARCHAR" />
    <result column="roleId" property="roleId" jdbcType="INTEGER" />
    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_uxinxi
    where uxinxiId = #{uxinxiId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Uxinxi" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_uxinxi (uxinxiId, uxinxiName, uxinxiMark, 
      uxinxiMark1, uxinxiMark2, uxinxiImg, 
      uxinxiImgName, uxinxiDate, uxinxiZong, 
      uxinxiZong1, uxinxiZong2, uxinxiDouble, 
      uxinxiDouble1, uxinxiDouble2, uxinxiType, 
      uxinxiType1, uxinxiType2, uxtypeId, 
      uxtypeName, userId, userName, 
      bumenId, bumenName, buyuanId, 
      buyuanName, buzhiId, buzhiName, 
      roleId, roleName)
    values (#{uxinxiId,jdbcType=INTEGER}, #{uxinxiName,jdbcType=VARCHAR}, #{uxinxiMark,jdbcType=VARCHAR}, 
      #{uxinxiMark1,jdbcType=VARCHAR}, #{uxinxiMark2,jdbcType=VARCHAR}, #{uxinxiImg,jdbcType=VARCHAR}, 
      #{uxinxiImgName,jdbcType=VARCHAR}, #{uxinxiDate,jdbcType=TIMESTAMP}, #{uxinxiZong,jdbcType=INTEGER}, 
      #{uxinxiZong1,jdbcType=INTEGER}, #{uxinxiZong2,jdbcType=INTEGER}, #{uxinxiDouble,jdbcType=DOUBLE}, 
      #{uxinxiDouble1,jdbcType=DOUBLE}, #{uxinxiDouble2,jdbcType=DOUBLE}, #{uxinxiType,jdbcType=INTEGER}, 
      #{uxinxiType1,jdbcType=INTEGER}, #{uxinxiType2,jdbcType=INTEGER}, #{uxtypeId,jdbcType=INTEGER}, 
      #{uxtypeName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{bumenId,jdbcType=INTEGER}, #{bumenName,jdbcType=VARCHAR}, #{buyuanId,jdbcType=INTEGER}, 
      #{buyuanName,jdbcType=VARCHAR}, #{buzhiId,jdbcType=INTEGER}, #{buzhiName,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.model.Uxinxi" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_uxinxi
    set uxinxiName = #{uxinxiName,jdbcType=VARCHAR},
      uxinxiMark = #{uxinxiMark,jdbcType=VARCHAR},
      uxinxiMark1 = #{uxinxiMark1,jdbcType=VARCHAR},
      uxinxiMark2 = #{uxinxiMark2,jdbcType=VARCHAR},
      uxinxiImg = #{uxinxiImg,jdbcType=VARCHAR},
      uxinxiImgName = #{uxinxiImgName,jdbcType=VARCHAR},
      uxinxiDate = #{uxinxiDate,jdbcType=TIMESTAMP},
      uxinxiZong = #{uxinxiZong,jdbcType=INTEGER},
      uxinxiZong1 = #{uxinxiZong1,jdbcType=INTEGER},
      uxinxiZong2 = #{uxinxiZong2,jdbcType=INTEGER},
      uxinxiDouble = #{uxinxiDouble,jdbcType=DOUBLE},
      uxinxiDouble1 = #{uxinxiDouble1,jdbcType=DOUBLE},
      uxinxiDouble2 = #{uxinxiDouble2,jdbcType=DOUBLE},
      uxinxiType = #{uxinxiType,jdbcType=INTEGER},
      uxinxiType1 = #{uxinxiType1,jdbcType=INTEGER},
      uxinxiType2 = #{uxinxiType2,jdbcType=INTEGER},
      uxtypeId = #{uxtypeId,jdbcType=INTEGER},
      uxtypeName = #{uxtypeName,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=INTEGER},
      userName = #{userName,jdbcType=VARCHAR},
      bumenId = #{bumenId,jdbcType=INTEGER},
      bumenName = #{bumenName,jdbcType=VARCHAR},
      buyuanId = #{buyuanId,jdbcType=INTEGER},
      buyuanName = #{buyuanName,jdbcType=VARCHAR},
      buzhiId = #{buzhiId,jdbcType=INTEGER},
      buzhiName = #{buzhiName,jdbcType=VARCHAR},
      roleId = #{roleId,jdbcType=INTEGER},
      roleName = #{roleName,jdbcType=VARCHAR}
    where uxinxiId = #{uxinxiId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select uxinxiId, uxinxiName, uxinxiMark, uxinxiMark1, uxinxiMark2, uxinxiImg, uxinxiImgName, 
    uxinxiDate, uxinxiZong, uxinxiZong1, uxinxiZong2, uxinxiDouble, uxinxiDouble1, uxinxiDouble2, 
    uxinxiType, uxinxiType1, uxinxiType2, uxtypeId, uxtypeName, userId, userName, bumenId, 
    bumenName, buyuanId, buyuanName, buzhiId, buzhiName, roleId, roleName
    from t_uxinxi
    where uxinxiId = #{uxinxiId,jdbcType=INTEGER}
  </select>
	<select id="selectAll" resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select * from t_uxinxi
		WHERE 1=1
		<if test="sdate!=null and sdate!=''">
			 AND uxinxiDate &gt;= #{sdate,jdbcType=TIMESTAMP} 
		</if>
		<if test="edate!=null and edate!=''">
			 AND uxinxiDate &lt;= #{edate,jdbcType=TIMESTAMP} 
		</if>
		<if test="uxinxi!=null">
			<if test="uxinxi.uxinxiName!=null and uxinxi.uxinxiName!=''">
				 AND uxinxiName LIKE  '%${uxinxi.uxinxiName}%' 
			</if>
			<if test="uxinxi.uxinxiId!=null">
				 AND uxinxiId = #{uxinxi.uxinxiId} 
			</if>
			<if test="uxinxi.uxtypeId!=null">
				 AND uxtypeId = #{uxinxi.uxtypeId} 
			</if>
			<if test="uxinxi.uxinxiType!=null">
				 AND uxinxiType = #{uxinxi.uxinxiType} 
			</if>
			<if test="uxinxi.uxinxiType1!=null">
				 AND uxinxiType1 = #{uxinxi.uxinxiType1} 
			</if>
			<if test="uxinxi.userId!=null">
				 AND userId = #{uxinxi.userId} 
			</if>
			<if test="uxinxi.bumenId!=null">
				 AND bumenId = #{uxinxi.bumenId} 
			</if>
			<if test="uxinxi.buyuanId!=null">
				 AND buyuanId = #{uxinxi.buyuanId} 
			</if>
			<if test="uxinxi.buzhiId!=null">
				 AND buzhiId = #{uxinxi.buzhiId} 
			</if>
			<if test="uxinxi.roleId!=null">
				 AND roleId = #{uxinxi.roleId} 
			</if>
		</if>
		order by uxinxiId 
		<if test="rows!=0">
			limit #{page},#{rows}
		</if>
	</select>
</mapper>